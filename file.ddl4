drop view Previous_Employee_view ;
drop view Employee_view ;
drop view Manager_view ;
drop view President_view ;
drop view Interim_Manager_view ;
drop view Project_Employee_view ;
drop view Current_Project_view ;
drop view Previous_Project_view ;

create view Previous_Employee_view as
SELECT 
    person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    isFired,
    salary,
    type
FROM Person where type = 'Previous_Employee' ;

create or replace TRIGGER Previous_Employee_trigger
     INSTEAD OF insert ON Previous_Employee_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    isFired,
    salary,
    type)
		 VALUES ( 
		:NEW.person_id,
   :NEW.first_name,
    :NEW.last_name,
    :NEW.home_address,
    :NEW.zipcode,
    :NEW.home_phone,
    :NEW.us_citizen,
    :NEW.isFired,
    :NEW.salary,
    'Previous_Employee') ;
END;
/

create view Employee_view as
SELECT 
    person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
   Person_person_id,
    type
FROM Person where type = 'Employee' ;
create or replace TRIGGER Employee_trigger
     INSTEAD OF insert ON Employee_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
  Person_person_id,
    type)
		 VALUES ( 
		:NEW.person_id,
   :NEW.first_name,
    :NEW.last_name,
    :NEW.home_address,
    :NEW.zipcode,
    :NEW.home_phone,
    :NEW.us_citizen,
    :NEW.employee_id,
    :NEW.salary,
    :NEW.salary_exception,
    :NEW.Person_person_id,
    'Employee') ;
END;
/

create view Manager_view as
SELECT 
    person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    bonus,
    Departments_dept_id,
    type
FROM Person where type = 'Manager' ;

create or replace TRIGGER Manager_trigger
     INSTEAD OF insert ON Manager_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    bonus,
    Departments_dept_id,
    type)  
		 VALUES ( 
		:NEW.person_id,
   :NEW.first_name,
    :NEW.last_name,
    :NEW.home_address,
    :NEW.zipcode,
    :NEW.home_phone,
    :NEW.us_citizen,
    :NEW.employee_id,
    :NEW.salary,
    :NEW.salary_exception,
    :NEW.bonus,
    :NEW.Departments_dept_id,
    'Manager') ;
END;
/

create view President_view as
SELECT 
    person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    bonus,
    type
FROM Person where type = 'President' ;

create or replace TRIGGER President_trigger
     INSTEAD OF insert ON President_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    bonus,
    type)
		 VALUES ( 
		:NEW.person_id,
   :NEW.first_name,
    :NEW.last_name,
    :NEW.home_address,
    :NEW.zipcode,
    :NEW.home_phone,
    :NEW.us_citizen,
    :NEW.employee_id,
    :NEW.salary,
    :NEW.salary_exception,
    :NEW.bonus,
    'President') ;
END;
/

create view Interim_Manager_view as
SELECT 
    person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    bonus,
    type
FROM Person where type = 'Interim_Manager' ;

create or replace TRIGGER Interim_Manager_trigger
     INSTEAD OF insert ON Interim_Manager_view
     FOR EACH ROW
BEGIN
    insert into Person( 	
		person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    bonus,
    type)
		 VALUES ( 
		:NEW.person_id,
   :NEW.first_name,
    :NEW.last_name,
    :NEW.home_address,
    :NEW.zipcode,
    :NEW.home_phone,
    :NEW.us_citizen,
    :NEW.employee_id,
    :NEW.salary,
    :NEW.salary_exception,
    :NEW.bonus,
    'Interim_Manager') ;
END;
/

create view Project_Employee_view as
SELECT 
    person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    employee_pno,
    type
FROM Person where type = 'Project-Employee' ;

create or replace TRIGGER Project_Employee_trigger
     INSTEAD OF insert ON Project_Employee_view
     FOR EACH ROW
BEGIN
    insert into Person( 
	
		person_id,
    first_name,
    last_name,
    home_address,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    employee_pno,
    type)
  
		 VALUES ( 
		:NEW.person_id,
   :NEW.first_name,
    :NEW.last_name,
    :NEW.home_address,
    :NEW.zipcode,
    :NEW.home_phone,
    :NEW.us_citizen,
    :NEW.employee_id,
    :NEW.salary,
    :NEW.salary_exception,
    :NEW.employee_pno,
    'Project-Employee') ;
END;
/

create view Current_Project_view as
SELECT 
    project_id,
    project_no,
    project_title,
    project_active,
    project_completed,
    type
FROM Project where type = 'Current-Project' ;

create or replace TRIGGER Current_Project_trigger
     INSTEAD OF insert ON Current_Project_view
     FOR EACH ROW
BEGIN
    insert into Project( 
    project_id,
		project_no,
    project_title,
    project_active,
    project_completed,
    type)
		 VALUES ( 
     :NEW.project_id,
		:NEW.project_no,
    :NEW.project_title,
    :NEW.project_active,
    :NEW.project_completed,
    'Current-Project') ;
END;
/

create view Previous_Project_view as
SELECT 
    project_id,
    project_no,
    project_title,
    end_date_month,
    end_date_day,
    end_date_year,
    est_person_hours,
    type
FROM Project where type = 'Previous-Project' ;

create or replace TRIGGER Previous_Project_trigger
     INSTEAD OF insert ON Previous_Project_view
     FOR EACH ROW
BEGIN
    insert into Project( 
    project_id,
		project_no,
    project_title,
    end_date_month,
    end_date_day,
    end_date_year,
    est_person_hours,
    type)
		 VALUES ( 
    :NEW.project_id,
		:NEW.project_no,
    :NEW.project_title,
    :NEW.end_date_month,
    :NEW.end_date_day,
    :NEW.end_date_year,
    :NEW.est_person_hours,
    'Previous-Project') ;
END;
/